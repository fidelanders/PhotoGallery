name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main # Deploys to the 'live' channel on push to main
  pull_request:
    branches:
      - main # Runs CI checks on pull requests against main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    # We only want to deploy on 'push', but we want to run the build/CI on 'pull_request'.
    # This condition ensures the 'deploy' step only runs on pushes to main.
    environment: 
      name: production # Good practice to define an environment for deployment
      url: https://photogallery-5c009.web.app # Add your actual site URL

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node.js
        # Although not strictly necessary with the official action, setting the version 
        # is good practice for the 'npm run build' step.
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üî® Install Dependencies and Build
        # FIXED: Use 'npm install' as a reliable fallback, or ensure 'package-lock.json' is committed 
        # if using 'npm ci'. 'npm install' is safer if you aren't sure about the lockfile.
        # Original: - run: npm ci && npm run build
        run: |
          npm install
          npm run build

      - name: üöÄ Deploy to Firebase Hosting
        # Only deploy on push events to the 'main' branch
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PHOTOGALLERY_5C009 }}
          channelId: live
          projectId: photogallery-5c009
          
      # OPTIONAL: You can add a step here for preview channel deployment on 'pull_request'
      # - name: üß™ Deploy to Preview Channel (Optional)
      #   if: ${{ github.event_name == 'pull_request' }}
      #   uses: FirebaseExtended/action-hosting-deploy@v0
      #   with:
      #     repoToken: ${{ secrets.GITHUB_TOKEN }}
      #     firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PHOTOGALLERY_5C009 }}
      #     # 'channelId: ' creates a unique preview channel based on the PR number
      #     projectId: photogallery-5c009